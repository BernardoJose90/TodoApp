name: Debug OIDC Authentication
on: workflow_dispatch
permissions:
  id-token: write
  contents: read
jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::851725622142:role/GitHubActions-EKS-Role
          aws-region: eu-west-2

      - name: Wait for OIDC propagation
        run: |
          echo "⏳ Waiting 30 seconds for OIDC provider propagation..."
          sleep 30

      - name: Debug AWS Identity
        run: |
          echo "🔍 AWS Identity:"
          aws sts get-caller-identity
          echo ""

      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Test EKS Token Generation
        run: |
          echo "🔍 Testing EKS token generation..."
          TOKEN_OUTPUT=$(aws eks get-token --cluster-name Todo-list-App-cluster --region eu-west-2 --output json 2>&1)
          echo "Token generation: $TOKEN_OUTPUT"
          echo ""

      - name: Manual Kubeconfig Setup
        run: |
          echo "🔧 Setting up manual kubeconfig..."
          CLUSTER_ENDPOINT=$(aws eks describe-cluster --name Todo-list-App-cluster --region eu-west-2 --query "cluster.endpoint" --output text)
          CA_DATA=$(aws eks describe-cluster --name Todo-list-App-cluster --region eu-west-2 --query "cluster.certificateAuthority.data" --output text)
          
          mkdir -p ~/.kube
          cat > ~/.kube/config << EOF
          apiVersion: v1
          kind: Config
          clusters:
          - cluster:
              certificate-authority-data: $CA_DATA
              server: $CLUSTER_ENDPOINT
            name: eks-cluster
          contexts:
          - context:
              cluster: eks-cluster
              user: github-actions
            name: eks-context
          current-context: eks-context
          kind: Config
          users:
          - name: github-actions
            user:
              exec:
                apiVersion: client.authentication.k8s.io/v1beta1
                command: aws
                args:
                - eks
                - get-token
                - --cluster-name
                - Todo-list-App-cluster
                - --region
                - eu-west-2
          EOF

      - name: Test kubectl with retry
        run: |
          echo "🔐 Testing kubectl access with retry..."
          for i in {1..3}; do
            echo "Attempt $i..."
            if kubectl get nodes --request-timeout=30s; then
              echo "✅ Success on attempt $i"
              break
            else
              echo "❌ Attempt $i failed"
              sleep 10
            fi
          done