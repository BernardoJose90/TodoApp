name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: eu-west-2
  EKS_CLUSTER_NAME: todoapp-prod-eks-eu-west-2
  ECR_REPOSITORY: webserver/todoapp

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::851725622142:role/GitHubActions-EKS-Role

      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure EKS access
        run: |
          aws eks update-kubeconfig \
            --region ${{ env.AWS_REGION }} \
            --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Test cluster access
        run: |
          kubectl get nodes
          echo "âœ… EKS cluster access successful!"

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin 851725622142.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.ECR_REPOSITORY }}:latest .
          docker tag ${{ env.ECR_REPOSITORY }}:latest 851725622142.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
          docker push 851725622142.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

      - name: Deploy to EKS
        run: |
          echo "ðŸš€ Deploying application from k8s/ folder..."
          kubectl apply -f k8s/

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/todo-app-deployment --timeout=300s
          kubectl get pods,svc,deploy -l app=todo-app